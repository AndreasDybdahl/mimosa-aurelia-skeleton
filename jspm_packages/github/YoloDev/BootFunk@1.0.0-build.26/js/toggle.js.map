{"version":3,"sources":["/var/snap-ci/repo/src/js/toggle.js"],"names":[],"mappings":";;;MAAS,QAAQ,EAAE,OAAO,EAAE,WAAW,EAEnC,OAAO;4BAEK,cAAc;;gCAId,kBAAkB;;AAJ3B,WAAS,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;AAC5C,WAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;GACzB;;AAEM,WAAS,kBAAkB,CAAC,SAAS,EAAE;AAC5C,WAAO,SAAS,QAAQ,CAAC,GAAG,EAAE;AAC5B,UAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC9C,UAAI,MAAM,KAAK,IAAI,EAAE;AACnB,YAAI,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC7C,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC3C,qBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;SACjC;AACD,WAAG,CAAC,cAAc,EAAE,CAAC;AACrB,YAAI,IAAI,CAAC,IAAI,EAAE;AACb,cAAI,CAAC,IAAI,EAAE,CAAC;SACb;OACF;KACF,CAAC;GACH;;;;AAtBQ,cAAQ,UAAR,QAAQ;AAAE,aAAO,UAAP,OAAO;AAAE,iBAAW,UAAX,WAAW;;;AAEnC,aAAO,GAAG,EAAE;AAsBhB,cAAQ,CAAC,YAAM;AACb,gBAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,GAAG,EAAK;AAC1C,cAAI,KAAK,GAAG,OAAO,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;AAC1C,cAAI,KAAK,KAAK,IAAI,EAAE;AAClB,gBAAI,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAC9C,gBAAI,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AACpC,qBAAO,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3C;WACF;SACF,CAAC,CAAC;OACJ,CAAC,CAAC;;AAEH,oBAAc,CAAC,UAAU,EAAE,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC","file":"/var/snap-ci/repo/src/js/toggle.js","sourcesContent":["import { domready, matches, toggleClass } from './utils';\n\nlet toggles = {};\n\nexport function registerToggle(name, handler) {\n  toggles[name] = handler;\n}\n\nexport function toggleClassHandler(className) {\n  return function doToggle(evt) {\n    let target = this.getAttribute('data-target');\n    if (target !== null) {\n      let elms = document.querySelectorAll(target);\n      for (let i = 0, l = elms.length; i < l; i++) {\n        toggleClass(elms[i], className);\n      }\n      evt.preventDefault();\n      if (this.blur) {\n        this.blur();\n      }\n    }\n  };\n}\n\ndomready(() => {\n  document.addEventListener('click', (evt) => {\n    let match = matches(evt, '[data-toggle]');\n    if (match !== null) {\n      let value = match.getAttribute('data-toggle');\n      if (value !== null && toggles[value]) {\n        return toggles[value].apply(match, [evt]);\n      }\n    }\n  });\n});\n\nregisterToggle('collapse', toggleClassHandler('collapse'));"]}