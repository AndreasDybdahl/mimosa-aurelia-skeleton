{"version":3,"sources":["/var/snap-ci/repo/src/app/resource-pool/behaviors/resource-pooled.js"],"names":[],"mappings":"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","file":"/var/snap-ci/repo/src/app/resource-pool/behaviors/resource-pooled.js","sourcesContent":["import {Behavior, Container} from 'aurelia-framework';\nimport {ViewCompiler, ViewResources, ViewSlot} from 'aurelia-templating';\nimport {ResourcePool} from '../services/resource-pool';\n\nvar hasTemplateElement = ('content' in document.createElement('template'));\n\nexport class ResourcePooled {\n  static metadata() {\n    return Behavior\n      .customElement('resource-pooled')\n      .withProperty('pool')\n      .skipContentProcessing()\n      .noView();\n  }\n\n  static inject() { return [Element, ResourcePool, ViewCompiler, ViewResources, ViewSlot, Container]; }\n  constructor(element, resourcePool, viewCompiler, viewResources, viewSlot, container) {\n    this.element = element;\n    this.resourcePool = resourcePool;\n    this.viewCompiler = viewCompiler;\n    this.viewResources = viewResources;\n    this.viewSlot = viewSlot;\n    this.container = container;\n\n    let template = document.createElement('template');\n    if (hasTemplateElement) {\n      template.content = document.createDocumentFragment();\n    }\n\n    while (element.firstChild) {\n      template.content.appendChild(element.firstChild);\n    }\n\n    this.template = template;\n  }\n\n  bind(context) {\n    if (!this.pool) {\n      this.pool = this.viewResources.viewUrl;\n    }\n\n    this.view = this.resourcePool.get(this.pool, 'view', () => {\n      const viewFactory = this.resourcePool.get(this.pool, 'viewFactory', () => this.viewCompiler.compile(this.template, this.viewResources));    \n      console.log(`Creating pooled view: ${this.pool}`);\n      try {\n        return viewFactory.create(this.container, null, {suppressBind: true});\n      } finally {\n        this.resourcePool.free(this.pool, 'viewFactory', viewFactory);\n      }\n    });\n    this.view.bind(context);\n    this.viewSlot.add(this.view);\n  }\n\n  unbind() {\n    this.viewSlot.remove(this.view);\n    this.view.unbind();\n    this.resourcePool.free(this.pool, 'view', this.view);\n    this.view = null;\n  }\n}"]}